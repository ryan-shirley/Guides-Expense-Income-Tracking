//
// Table
//


// General styles

.table {
    thead th {
        padding-top: $table-head-spacer-y;
        padding-bottom: $table-head-spacer-y;
        font-size: $table-head-font-size;
        text-transform: $table-head-text-transform;
        letter-spacing: $table-head-letter-spacing;
        border-bottom: $table-border-width solid $table-border-color;
    }

    th {
        font-weight: $table-head-font-weight;
    }

    td {
        .progress {
            height: 3px;
            width: 120px;
            margin: 0;
        }
    }

    td,
    th {
        font-size: $table-body-font-size;
        white-space: nowrap;
    }


    // Vetical align table content

    &.align-items-center {
        td,
        th {
            vertical-align: middle;
        }
    }


   // Styles for dark table

   .thead-dark {
        th {
            background-color: $table-dark-head-bg;
            color: $table-dark-head-color;
        }
    }


    // Styles for light table

    .thead-light {
        th {
            background-color: $table-head-bg;
            color: $table-head-color;
        }
    }
}


// Add transition for hover state

.table-hover {
    tr {
        @include transition($transition-base);
    }
}


// Flush tables

.table-flush {
    td,
    th {
        border-left: 0;
        border-right: 0;
    }

    tbody {
        tr {
            &:first-child {
                td,
                th {
                    border-top: 0;
                }
            }

            &:last-child {
                td,
                th {
                    border-bottom: 0;
                }
            }
        }
    }
}


// Tables inside cards

.card {
    .table {
        margin-bottom: 0;

        td,
        th {
            padding-left: $card-spacer-x;
            padding-right: $card-spacer-x;
        }
    }
}


// Data Tables

.dataTables_length, .dataTables_info {
    padding-left: 1.5rem;
    padding-bottom: .5rem;
    font-size: $font-size-sm;
    color: $gray-700 !important;
}

.dataTables_filter label {
    font-size: $font-size-sm;
    color: $gray-700 !important;
    padding-right: 1.5rem;
    padding-bottom: .5rem;
}

.dataTables_filter input {
    height: 2rem;
    padding: $input-padding-y $input-padding-x;
    font-size: $font-size-sm;
    line-height: $input-line-height;
    color: $input-color;
    background-color: $input-bg;
    background-clip: padding-box;
    border: $input-border-width solid $input-border-color;
  
    // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
    @if $enable-rounded {
        // Manually use the if/else instead of the mixin to account for iOS override
        border-radius: $input-border-radius;
    } @else {
        // Otherwise undo the iOS default
        border-radius: 0;
    }

    @include box-shadow($input-box-shadow);
    @include transition($input-transition);

    // Unstyle the caret on `<select>`s in IE10+.
    &::-ms-expand {
        background-color: transparent;
        border: 0;
    }

    // Customize the `:focus` state to imitate native WebKit styles.
    @include form-control-focus();

    // Placeholder
    &::placeholder {
        color: $input-placeholder-color;
        // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
        opacity: 1;
    }

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &:disabled,
    &[readonly] {
        background-color: $input-disabled-bg;
        // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
        opacity: 1;
    }
}

.dataTables_wrapper .dataTables_paginate {
    padding: .5rem 1.5rem 1.5rem;

    .paginate_button {
        &.disabled {
            border-color: $table-border-color;
            color: $body-color !important;

            &:hover {
                background-color: #fff;
                cursor: not-allowed;
                border-color: $table-border-color;
            }
        }
        &.current {
            background: $primary;
            border: none;
            color: #fff !important;

            &:hover {
                background: $primary;
                border: none;
                color: #fff !important;
            }
        }
        &:hover {
            background-color: $table-border-color;
        }
        

        border-color: $table-border-color;
        color: $body-color !important;
        border-radius: 50% !important;
        font-size: $font-size-sm;
    }
}

table.dataTable.no-footer {
    border-bottom: $table-border-width solid $table-border-color;
}